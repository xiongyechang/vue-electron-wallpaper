# 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
name: vue-electron-wallpaper Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # tags: # 当我们提交代码为tag 是以'v'开头的时候才会触发自动部署到服务端 如 git push tag v0.1.0
  #     - 'v*'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # 在执行 workflow 时, 允许在 GitHub Actions 页面输入参数，
    # 控制执行逻辑。我们可以将人工处理的逻辑，
    # 在 GitHub Actions 参数化执行，适用于持续部署场景。
    # inputs:
    #   logLevel:
    #     description: 'Log level'     
    #     required: true
    #     default: 'warning'
    #   tags:
    #     description: 'Test scenario tags'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 第一步：下载源码（CI/CD拉取代码到自己的本地）
      - name: Checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@master

      # 第二步: 设置node版本
      - name: Set Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 14.18.2

      # 第三步：构建
      # Runs a single command using the runners shell
      - name: Build-Setup
        uses: actions/setup-node@master

      - name: Build & Compress
        run: |
          npm install
          npm run build:linux
          tar -zcvf release.tgz vue.config.js tsconfig.json README.md package.json package-lock.json babel.config.js .gitignore .eslintrc.js .browserslistrc src public docs

      # 发布 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 上传构建结果到 Release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.tgz
          asset_name: release.tgz
          asset_content_type: application/x-tgz

      # 第五步：部署到服务器
      - name: Deploy
        uses: appleboy/ssh-action@master # 使用ssh链接服务器
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
            mkdir /root/opt/vue-electron-wallpaper
            cd /root/opt/vue-electron-wallpaper
            wget https://github.com/xiongyechang/vue-elelctron-wallpaper/releases/latest/download/release.tgz -O release.tgz
            tar zxvf release.tgz
            npm install --production
            pm2 restart
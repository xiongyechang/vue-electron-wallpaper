# 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
name: vue-electron-wallpaper Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # tags: # 当我们提交代码为tag 是以'v'开头的时候才会触发自动部署到服务端 如 git push tag v0.1.0
  #     - 'v*'
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]
  # push:
  #   tags:
  #     - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # 在执行 workflow 时, 允许在 GitHub Actions 页面输入参数，
    # 控制执行逻辑。我们可以将人工处理的逻辑，
    # 在 GitHub Actions 参数化执行，适用于持续部署场景。
    # inputs:
    #   logLevel:
    #     description: 'Log level'     
    #     required: true
    #     default: 'warning'
    #   tags:
    #     description: 'Test scenario tags'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 第一步：下载源码（CI/CD拉取代码到自己的本地）
      - name: Checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@master

      # 第二步: 设置node版本
      - name: Set Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 14.18.2

      - name: 'ls'
        run: echo "${{github.action_path}}"
        
      - name: 'ls2'
        run: echo "${{github.repository}}"

      # 第三步：构建
      # Runs a single command using the runners shell
      # - name: Build-Setup
      #   uses: actions/setup-node@master

      # - name: Build & Compress
      #   run: npm install

      # - name: build:linux
      #   run: npm run build:linux

      # - name: build:mac
      #   run: npm run build:mac

      # 发布 Release
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset AppImage
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: vue-electron-wallpaper.AppImage
      #     path: dist_electron/*.AppImage
      
      # - name: Upload Release Asset deb
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: vue-electron-wallpaper.deb
      #     path: dist_electron/*.deb